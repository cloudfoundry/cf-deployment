---
name: cf
properties_shared_across_every_instance_group:
  metron: &2
    syslog_daemon_config:
      enable: false
    metron_agent:
      deployment: "((metron_agent_deployment_name))"
      tls:
        client_cert: "((metron_metron_agent_tls_client_cert))"
        client_key: "((metron_metron_agent_tls_client_key))"
      etcd:
        client_cert: "((etcd_client_cert))"
        client_key: "((etcd_client_key))"
    metron_endpoint:
      shared_secret: "((dropsonde_shared_secret))"
    loggregator:
      tls:
        ca_cert: "((loggregator_tls_ca_cert))"
        trafficcontroller:
          cert: "((loggregator_tls_tc_cert))"
          key: "((loggregator_tls_tc_key))"
        metron:
          cert: "((metron_metron_agent_tls_client_cert))"
          key: "((metron_metron_agent_tls_client_key))"
        doppler:
          cert: "((loggregator_tls_doppler_cert))"
          key: "((loggregator_tls_doppler_key))"
      etcd:
        require_ssl: true
        ca_cert: "((etcd_ca_cert))"
        machines:
        - etcd.service.cf.internal
update:
  canaries: 1
  canary_watch_time: 30000-1200000
  max_in_flight: 5
  serial: false
  update_watch_time: 5000-1200000
instance_groups:
- name: consul
  azs:
  - z1
  - z2
  - z3
  instances: 3
  persistent_disk_type: 5GB
  vm_type: m3.medium
  stemcell: default
  update:
    max_in_flight: 1
    serial: true
  networks:
  - name: private
    static_ips: &1
    - 10.0.31.190
    - 10.0.47.190
    - 10.0.63.190
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: server
          domain: cf.internal
          servers: &3
            lan: *1
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: metron_agent
    release: loggregator
    properties: *2
- name: nats
  azs:
  - z1
  - z2
  instances: 2
  vm_type: c3.large
  vm_extensions:
  - 5GB_ephemeral_disk
  stemcell: default
  networks:
  - name: private
    static_ips: &4
    - 10.0.31.191
    - 10.0.47.191
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: nats_stream_forwarder
    release: nats
    properties:
      nats: &6
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
  - name: nats
    release: nats
    properties:
      nats:
        password: "((nats_password))"
        user: "((nats_user))"
        debug: true
        monitor_port: 9222
        prof_port: 6060
        trace: false
  - name: metron_agent
    release: loggregator
    properties: *2
- name: etcd
  azs:
  - z1
  - z2
  - z3
  instances: 3
  persistent_disk_type: 5GB
  vm_type: m3.medium
  vm_extensions:
  - 5GB_ephemeral_disk
  stemcell: default
  update:
    serial: true
    max_in_flight: 1
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            etcd: {}
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: etcd
    release: etcd
    properties:
      etcd:
        advertise_urls_dns_suffix: etcd.service.cf.internal
        cluster:
        - instances: 3
          name: etcd
        peer_require_ssl: true
        require_ssl: true
        ca_cert: "((etcd_ca_cert))"
        client_cert: "((etcd_client_cert))"
        client_key: "((etcd_client_key))"
        server_cert: "((etcd_server_cert))"
        server_key: "((etcd_server_key))"
        peer_ca_cert: "((etcd_peer_ca_cert))"
        peer_cert: "((etcd_peer_cert))"
        peer_key: "((etcd_peer_key))"
  - name: etcd_metrics_server
    release: etcd
    properties:
      etcd_metrics_server:
        etcd:
          dns_suffix: etcd.service.cf.internal
          require_ssl: true
          ca_cert: "((etcd_ca_cert))"
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
  - name: metron_agent
    release: loggregator
    properties: *2
- name: mysql
  azs:
  - z1
  persistent_disk_type: 10GB
  instances: 1
  vm_type: m3.large
  vm_extensions:
  - 10GB_ephemeral_disk
  stemcell: default
  update:
    serial: true
  networks:
  - name: private
    static_ips:
    - 10.0.31.193
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: mysql
    release: cf-mysql
    properties:
      network_name: private
      cf_mysql:
        mysql:
          galera_healthcheck:
            db_password: "((cf_mysql_mysql_galera_healthcheck_password))"
            endpoint_username: "((cf_mysql_mysql_galera_healthcheck_endpoint_username))"
            endpoint_password: "((cf_mysql_mysql_galera_healthcheck_endpoint_password))"
          admin_password: "((cf_mysql_mysql_admin_password))"
          roadmin_password: "((cf_mysql_mysql_roadmin_password))"
          cluster_health:
            password: "((cf_mysql_mysql_cluster_health_password))"
          seeded_databases:
          - name: cloud_controller
            username: "((cf_mysql_mysql_seeded_databases_cc_username))"
            password: "((cf_mysql_mysql_seeded_databases_cc_password))"
          - name: uaa
            username: "((cf_mysql_mysql_seeded_databases_uaa_username))"
            password: "((cf_mysql_mysql_seeded_databases_uaa_password))"
          - name: diego
            username: "((cf_mysql_mysql_seeded_databases_diego_username))"
            password: "((cf_mysql_mysql_seeded_databases_diego_password))"
          database_startup_timeout: 600
          cluster_ips:
          - 10.0.31.193
  - name: metron_agent
    release: loggregator
    properties: *2
- name: diego-bbs
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.large
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: bbs
    release: diego
    properties:
      diego:
        bbs:
          active_key_label: key-2016-06
          encryption_keys:
          - label: key-2016-06
            passphrase: "((diego_bbs_encryption_keys_passphrase))"
          sql:
            db_host: 10.0.31.193
            db_port: 3306
            db_schema: diego
            db_username: diego
            db_password: "((diego_bbs_sql_db_password))"
            db_driver: mysql
          etcd:
            machines: []
            ca_cert: nil
            client_cert: nil
            client_key: nil
          ca_cert: "((diego_bbs_ca_cert))"
          server_cert: "((diego_bbs_server_cert))"
          server_key: "((diego_bbs_server_key))"
  - name: metron_agent
    release: loggregator
    properties: *2
- name: uaa
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.medium
  vm_extensions:
  - 10GB_ephemeral_disk
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            uaa: {}
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: uaa
    release: uaa
    properties:
      uaa:
        sslCertificate: "((uaa_sslCertificate))"
        sslPrivateKey: "((uaa_sslPrivateKey))"
        zones:
          internal:
            hostnames:
            - uaa.service.cf.internal
        url: "https://uaa.((system_domain))"
        admin:
          client_secret: "((uaa_admin_client_secret))"
        scim:
          users:
          - name: "((uaa_scim_users_admin_name))"
            password: "((uaa_scim_users_admin_password))"
            groups:
            - cloud_controller.admin
            - doppler.firehose
            - openid
            - routing.router_groups.read
            - scim.read
            - scim.write
        login:
          client_secret: "((uaa_login_client_secret))"
        jwt:
          signing_key: "((uaa_jwt_signing_key))"
          verification_key: "((uaa_jwt_verification_key))"
        clients:
          cc-service-dashboards:
            authorities: clients.read,clients.write,clients.admin
            authorized-grant-types: client_credentials
            scope: openid,cloud_controller_service_permissions.read
            secret: "((uaa_clients_cc-service-dashboards_secret))"
          cc_routing:
            authorities: routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: "((uaa_clients_cc-routing_secret))"
          cf:
            access-token-validity: 600
            authorities: uaa.none
            authorized-grant-types: password,refresh_token
            override: true
            refresh-token-validity: 2592000
            scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read
          cloud_controller_username_lookup:
            authorities: scim.userids
            authorized-grant-types: client_credentials
            secret: "((uaa_clients_cloud_controller_username_lookup_secret))"
          doppler:
            authorities: uaa.resource
            override: true
            secret: "((uaa_clients_doppler_secret))"
          gorouter:
            authorities: routing.routes.read
            authorized-grant-types: client_credentials,refresh_token
            secret: "((uaa_clients_gorouter_secret))"
          ssh-proxy:
            authorized-grant-types: authorization_code
            autoapprove: true
            override: true
            redirect-uri: "/login"
            scope: openid,cloud_controller.read,cloud_controller.write
            secret: "((uaa_clients_ssh-proxy_secret))"
          tcp_emitter:
            authorities: routing.routes.write,routing.routes.read,routing.router_groups.read
            authorized-grant-types: client_credentials,refresh_token
            secret: "((uaa_clients_tcp_emitter_secret))"
          tcp_router:
            authorities: routing.routes.read,routing.router_groups.read
            authorized-grant-types: client_credentials,refresh_token
            secret: "((uaa_clients_tcp_router_secret))"
      uaadb:
        address: 10.0.31.193
        databases:
        - name: uaa
          tag: uaa
        db_scheme: mysql
        port: 3306
        roles:
        - name: "((cf_mysql_mysql_seeded_databases_uaa_username))"
          password: "((cf_mysql_mysql_seeded_databases_uaa_password))"
          tag: admin
  - name: route_registrar
    release: routing
    properties:
      route_registrar:
        routes:
        - health_check:
            name: uaa-healthcheck
            script_path: "/var/vcap/jobs/uaa/bin/health_check"
          name: uaa
          port: 8080
          registration_interval: 4s
          tags:
            component: uaa
          uris:
          - "uaa.((system_domain))"
          - "*.uaa.((system_domain))"
          - "login.((system_domain))"
          - "*.login.((system_domain))"
      nats:
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
  - name: metron_agent
    release: loggregator
    properties: *2
  - name: statsd-injector
    release: loggregator
- name: diego-brain
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.medium
  vm_extensions:
  - ssh-proxy-lb
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: ssh_proxy
    release: diego
    properties:
      diego:
        ssl:
          skip_cert_verify: true
        ssh_proxy:
          enable_cf_auth: true
          host_key: "((diego_ssh_proxy_host_key))"
          uaa_secret: "((uaa_clients_ssh-proxy_secret))"
          uaa_token_url: "https://uaa.((system_domain))/oauth/token"
          bbs: &5
            ca_cert: "((diego_bbs_ca_cert))"
            client_cert: "((diego_bbs_client_cert))"
            client_key: "((diego_bbs_client_key))"
  - name: file_server
    release: diego
  - name: auctioneer
    release: diego
    properties:
      diego:
        auctioneer:
          bbs: *5
  - name: metron_agent
    release: loggregator
    properties: *2
- name: diego-cell
  azs:
  - z1
  - z2
  instances: 2
  vm_type: r3.xlarge
  vm_extensions:
  - 100GB_ephemeral_disk
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: cflinuxfs2-rootfs-setup
    release: cflinuxfs2-rootfs
  - name: garden
    release: garden-runc
    properties:
      garden:
        default_container_grace_time: 0
        deny_networks:
        - 0.0.0.0/0
        persistent_image_list:
        - "/var/vcap/packages/cflinuxfs2/rootfs"
  - name: rep
    release: diego
    properties:
      diego:
        rep:
          bbs: *5
          preloaded_rootfses:
          - cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs
        ssl:
          skip_cert_verify: true
  - name: metron_agent
    release: loggregator
    properties: *2
- name: router
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.medium
  vm_extensions:
  - router-lb
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            gorouter: {}
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: gorouter
    release: routing
    properties:
      nats: *6
      router:
        enable_ssl: true
        ssl_cert: "((router_ssl_cert))"
        ssl_key: "((router_ssl_key))"
        status:
          password: "((router_status_password))"
          user: "((router_status_user))"
        route_services_secret: "((router_route_services_secret))"
        ssl_skip_validation: true
      uaa:
        clients:
          gorouter:
            secret: "((uaa_clients_gorouter_secret))"
        ssl:
          port: 1234
  - name: metron_agent
    release: loggregator
    properties: *2
- name: tcp-router
  azs:
  - z1
  - z2
  instances: 0
  vm_type: m3.medium
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: haproxy
    release: routing
  - name: router_configurer
    release: routing
    properties:
      skip_ssl_validation: true
      uaa:
        tls_port: 8443
      router_configurer:
        oauth_secret: "((uaa_clients_tcp_router_secret))"
  - name: metron_agent
    release: loggregator
    properties: *2
- name: route-emitter
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.medium
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: route_emitter
    release: diego
    properties:
      diego:
        route_emitter:
          nats: *6
          bbs:
            ca_cert: "((diego_bbs_ca_cert))"
            client_cert: "((diego_bbs_client_cert))"
            client_key: "((diego_bbs_client_key))"
            require_ssl: true
  - name: metron_agent
    release: loggregator
    properties: *2
- name: blobstore
  azs:
  - z1
  instances: 1
  vm_type: m3.large
  vm_extensions:
  - 10GB_ephemeral_disk
  persistent_disk_type: 100GB
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            blobstore: {}
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: blobstore
    release: capi
    properties:
      system_domain: "((system_domain))"
      blobstore:
        admin_users:
        - username: "((blobstore_admin_users_username))"
          password: "((blobstore_admin_users_password))"
        secure_link:
          secret: "((blobstore_secure_link_secret))"
        tls:
          cert: "((blobstore_tls_cert))"
          private_key: "((blobstore_tls_private_key))"
          ca_cert: "((blobstore_tls_ca_cert))"
  - name: route_registrar
    release: routing
    properties:
      route_registrar:
        routes:
        - name: blobstore
          port: 8080
          registration_interval: 20s
          tags:
            component: blobstore
          uris:
          - "blobstore.((system_domain))"
      nats:
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
  - name: metron_agent
    release: loggregator
    properties: *2
- name: api
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.large
  vm_extensions:
  - 50GB_ephemeral_disk
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            cloud_controller_ng: {}
            routing-api: {}
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: cloud_controller_ng
    release: capi
    properties:
      router:
        route_services_secret: "((router_route_services_secret))"
      hm9000:
        port: -1
      ssl: &16
        skip_cert_verify: true
      system_domain: "((system_domain))"
      system_domain_organization: default_org
      app_domains: &17
      - "((app_domain))"
      app_ssh: &18
        host_key_fingerprint: "((diego_ssh_proxy_host_key_fingerprint))"
        oauth_client_id: ssh-proxy
      nats:
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
      uaa:
        clients:
          cc_routing:
            secret: "((uaa_clients_cc-routing_secret))"
          cloud_controller_username_lookup:
            secret: "((uaa_clients_cloud_controller_username_lookup_secret))"
          cc-service-dashboards:
            secret: "((uaa_clients_cc-service-dashboards_secret))"
        url: "https://uaa.((system_domain))"
        jwt:
          verification_key: "((uaa_jwt_verification_key))"
      cc:
        default_running_security_groups: &11
        - public_networks
        - dns
        default_staging_security_groups: &12
        - public_networks
        - dns
        security_group_definitions: &13
        - name: public_networks
          rules:
          - destination: 0.0.0.0-9.255.255.255
            protocol: all
          - destination: 11.0.0.0-169.253.255.255
            protocol: all
          - destination: 169.255.0.0-172.15.255.255
            protocol: all
          - destination: 172.32.0.0-192.167.255.255
            protocol: all
          - destination: 192.169.0.0-255.255.255.255
            protocol: all
        - name: dns
          rules:
          - destination: 0.0.0.0/0
            ports: '53'
            protocol: tcp
          - destination: 0.0.0.0/0
            ports: '53'
            protocol: udp
        install_buildpacks: &10
        - name: binary_buildpack
          package: binary-buildpack
        - name: dotnet_core_buildpack
          package: dotnet-core-buildpack
        - name: go_buildpack
          package: go-buildpack
        - name: java_buildpack
          package: buildpack_java
        - name: nodejs_buildpack
          package: nodejs-buildpack
        - name: php_buildpack
          package: php-buildpack
        - name: python_buildpack
          package: python-buildpack
        - name: python_buildpack
          package: python-buildpack
        - name: ruby_buildpack
          package: ruby-buildpack
        - name: staticfile_buildpack
          package: staticfile-buildpack
        default_to_diego_backend: true
        db_encryption_key: "((cc_db_encryption_key))"
        bulk_api_password: "((cc_bulk_api_password))"
        internal_api_password: "((cc_internal_api_password))"
        staging_upload_user: "((cc_staging_upload_user))"
        staging_upload_password: "((cc_staging_upload_password))"
        quota_definitions: &14
          default:
            memory_limit: 102400
            non_basic_services_allowed: true
            total_routes: 1000
            total_services: -1
        buildpacks: &7
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            password: "((blobstore_admin_users_password))"
            private_endpoint: "https://blobstore.service.cf.internal:4443"
            public_endpoint: "https://blobstore.((system_domain))"
            username: "((blobstore_admin_users_username))"
        resource_pool: *7
        packages: *7
        droplets: *7
      ccdb: &15
        databases:
        - name: cloud_controller
          tag: cc
        address: 10.0.31.193
        db_scheme: mysql
        port: 3306
        roles:
        - name: "((cf_mysql_mysql_seeded_databases_cc_username))"
          password: "((cf_mysql_mysql_seeded_databases_cc_password))"
          tag: admin
  - name: cloud_controller_worker
    release: capi
    properties:
      hm9000:
        port: -1
      cc:
        db_encryption_key: "((cc_db_encryption_key))"
        default_to_diego_backend: true
        install_buildpacks: *10
        default_running_security_groups: *11
        default_staging_security_groups: *12
        security_group_definitions: *13
        internal_api_password: "((cc_internal_api_password))"
        bulk_api_password: "((cc_bulk_api_password))"
        quota_definitions: *14
        staging_upload_user: "((cc_staging_upload_user))"
        staging_upload_password: "((cc_staging_upload_password))"
        resource_pool: *7
        packages: *7
        droplets: *7
        buildpacks: *7
      ccdb: *15
      ssl: *16
      system_domain: "((system_domain))"
      system_domain_organization: default_org
      app_domains: *17
      app_ssh: *18
      nats:
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
      uaa:
        clients:
          cc-service-dashboards:
            secret: "((uaa_clients_cc-service-dashboards_secret))"
        url: "https://uaa.((system_domain))"
        jwt:
          verification_key: "((uaa_jwt_verification_key))"
  - name: binary-buildpack
    release: binary-buildpack
  - name: dotnet-core-buildpack
    release: dotnet-core-buildpack
  - name: go-buildpack
    release: go-buildpack
  - name: java-buildpack
    release: java-buildpack
  - name: java-offline-buildpack
    release: java-offline-buildpack
  - name: nodejs-buildpack
    release: nodejs-buildpack
  - name: php-buildpack
    release: php-buildpack
  - name: python-buildpack
    release: python-buildpack
  - name: ruby-buildpack
    release: ruby-buildpack
  - name: staticfile-buildpack
    release: staticfile-buildpack
  - name: route_registrar
    release: routing
    properties:
      route_registrar:
        routes:
        - name: api
          registration_interval: 20s
          port: 9022
          uris:
          - "api.((system_domain))"
      nats:
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
  - name: statsd-injector
    release: loggregator
  - name: metron_agent
    release: loggregator
    properties: *2
  - name: routing-api
    release: routing
    properties:
      routing_api:
        system_domain: "((system_domain))"
        etcd:
          servers:
          - etcd.service.cf.internal
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
          ca_cert: "((etcd_ca_cert))"
          require_ssl: true
        router_groups:
        - name: default-tcp
          type: tcp
          reservable_ports: 1024-65535
      skip_ssl_validation: true
      uaa:
        tls_port: 8443
- name: cc_clock
  azs:
  - z1
  instances: 1
  vm_type: m3.large
  vm_extensions:
  - 5GB_ephemeral_disk
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: cloud_controller_clock
    release: capi
    properties:
      hm9000:
        port: -1
      cc:
        db_encryption_key: "((cc_db_encryption_key))"
        default_to_diego_backend: true
        install_buildpacks: *10
        default_running_security_groups: *11
        default_staging_security_groups: *12
        security_group_definitions: *13
        internal_api_password: "((cc_internal_api_password))"
        bulk_api_password: "((cc_bulk_api_password))"
        quota_definitions: *14
        staging_upload_user: "((cc_staging_upload_user))"
        staging_upload_password: "((cc_staging_upload_password))"
        resource_pool: *7
        packages: *7
        droplets: *7
        buildpacks: *7
      ccdb: *15
      ssl: *16
      system_domain: "((system_domain))"
      system_domain_organization: default_org
      app_domains: *17
      app_ssh: *18
      nats:
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
      uaa:
        clients:
          cc-service-dashboards:
            secret: "((uaa_clients_cc-service-dashboards_secret))"
        url: "https://uaa.((system_domain))"
        jwt:
          verification_key: "((uaa_jwt_verification_key))"
  - name: statsd-injector
    release: loggregator
  - name: metron_agent
    release: loggregator
    properties: *2
- name: cc_bridge
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.medium
  vm_extensions:
  - 5GB_ephemeral_disk
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: stager
    release: capi
    properties:
      diego:
        ssl: *16
      capi:
        stager:
          bbs: *5
          cc:
            basic_auth_password: "((cc_internal_api_password))"
  - name: nsync
    release: capi
    properties:
      diego:
        ssl: *16
      capi:
        nsync:
          bbs: *5
          cc:
            basic_auth_password: "((cc_internal_api_password))"
            base_url: "https://api.((system_domain))"
          diego_privileged_containers: true
  - name: tps
    release: capi
    properties:
      diego:
        ssl: *16
      capi:
        tps:
          bbs: *5
          cc:
            basic_auth_password: "((cc_internal_api_password))"
  - name: cc_uploader
    release: capi
    properties:
      diego:
        ssl: *16
  - name: metron_agent
    release: loggregator
    properties: *2
- name: doppler
  azs:
  - z1
  - z2
  instances: 2
  vm_type: m3.medium
  vm_extensions:
  - 5GB_ephemeral_disk
  stemcell: default
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: doppler
    release: loggregator
    properties:
      doppler:
        etcd:
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
        syslog_skip_cert_verify: true
        tls:
          enable: true
          server_cert: "((doppler_tls_server_cert))"
          server_key: "((doppler_tls_server_key))"
      loggregator:
        tls:
          ca_cert: "((loggregator_tls_ca_cert))"
          trafficcontroller:
            cert: "((loggregator_tls_tc_cert))"
            key: "((loggregator_tls_tc_key))"
          metron:
            cert: "((metron_metron_agent_tls_client_cert))"
            key: "((metron_metron_agent_tls_client_key))"
          doppler:
            cert: "((loggregator_tls_doppler_cert))"
            key: "((loggregator_tls_doppler_key))"
        etcd:
          require_ssl: true
          ca_cert: "((etcd_ca_cert))"
          machines:
          - etcd.service.cf.internal
      doppler_endpoint:
        shared_secret: "((dropsonde_shared_secret))"
  - name: syslog_drain_binder
    release: loggregator
    properties:
      loggregator:
        tls:
          ca_cert: "((loggregator_tls_ca_cert))"
          trafficcontroller:
            cert: "((loggregator_tls_tc_cert))"
            key: "((loggregator_tls_tc_key))"
          metron:
            cert: "((metron_metron_agent_tls_client_cert))"
            key: "((metron_metron_agent_tls_client_key))"
          doppler:
            cert: "((loggregator_tls_doppler_cert))"
            key: "((loggregator_tls_doppler_key))"
        etcd:
          require_ssl: true
          ca_cert: "((etcd_ca_cert))"
          machines:
          - etcd.service.cf.internal
      syslog_drain_binder:
        etcd:
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
      system_domain: "((system_domain))"
      cc:
        bulk_api_password: "((cc_bulk_api_password))"
        srv_api_uri: "https://api.((system_domain))"
      ssl: *16
  - name: metron_agent
    release: loggregator
    properties: *2
- name: log_controller
  azs:
  - z1
  - z2
  instances: 2
  vm_type: t2.small
  vm_extensions:
  - 5GB_ephemeral_disk
  stemcell: default
  update:
    max_in_flight: 1
    serial: true
  networks:
  - name: private
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            loggregator_trafficcontroller: {}
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: loggregator_trafficcontroller
    release: loggregator
    properties:
      traffic_controller:
        etcd:
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
      uaa:
        clients:
          doppler:
            secret: "((uaa_clients_doppler_secret))"
        url: "https://uaa.((system_domain))"
      loggregator:
        tls:
          ca_cert: "((loggregator_tls_ca_cert))"
          trafficcontroller:
            cert: "((loggregator_tls_tc_cert))"
            key: "((loggregator_tls_tc_key))"
          metron:
            cert: "((metron_metron_agent_tls_client_cert))"
            key: "((metron_metron_agent_tls_client_key))"
          doppler:
            cert: "((loggregator_tls_doppler_cert))"
            key: "((loggregator_tls_doppler_key))"
        etcd:
          require_ssl: true
          ca_cert: "((etcd_ca_cert))"
          machines:
          - etcd.service.cf.internal
      system_domain: "((system_domain))"
      ssl: *16
      cc:
        srv_api_uri: "https://api.((system_domain))"
  - name: route_registrar
    release: routing
    properties:
      route_registrar:
        routes:
        - name: loggregator
          port: 8080
          registration_interval: 20s
          uris:
          - "loggregator.((system_domain))"
        - name: doppler
          port: 8081
          registration_interval: 20s
          uris:
          - "doppler.((system_domain))"
          - "*.doppler.((system_domain))"
      nats:
        machines: *4
        password: "((nats_password))"
        port: 4222
        user: "((nats_user))"
  - name: metron_agent
    release: loggregator
    properties: *2
releases:
- name: capi
  url: https://bosh.io/d/github.com/cloudfoundry/capi-release?v=1.11.0
  version: 1.11.0
  sha1: eb7abdc7bc724f48a6b4cdb0b200bee84af1e413
- name: consul
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/consul-release?v=139
  version: '139'
  sha1: 9baa88d434c7e7d87161391b3b4e8afcf7a6472f
- name: diego
  url: https://bosh.io/d/github.com/cloudfoundry/diego-release?v=0.1490.0
  version: 0.1490.0
  sha1: 7154de722856b7aecbd4d08eae6c8dfd13e068cb
- name: etcd
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/etcd-release?v=86
  version: '86'
  sha1: 54387b1692150c649a3d0947bc7efc25ffadbe20
- name: loggregator
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator?v=66
  version: '66'
  sha1: 12a4be7b5e1106f03295caa9910888c2edaf0bb9
- name: nats
  url: https://bosh.io/d/github.com/cloudfoundry/nats-release?v=14
  version: '14'
  sha1: 495cdd240a00ef4afa7ca367dbf3a2cc2624c8d0
- name: cf-mysql
  url: https://bosh.io/d/github.com/cloudfoundry/cf-mysql-release?v=32
  version: '32'
  sha1: a41bb2cadd4311bc9977ccc2c1fca07ba41ccef2
- name: uaa
  url: https://bosh.io/d/github.com/cloudfoundry/uaa-release?v=22
  version: '22'
  sha1: b0cde773f90ade9db3d375e9a671163b7e1c48ae
- name: garden-runc
  url: https://bosh.io/d/github.com/cloudfoundry/garden-runc-release?v=1.0.3
  version: 1.0.3
  sha1: 0c04b944d50ec778f5b34304fd4bc8fc0ed83b2b
- name: cflinuxfs2-rootfs
  url: https://bosh.io/d/github.com/cloudfoundry/cflinuxfs2-rootfs-release?v=1.40.0
  version: 1.40.0
  sha1: 5d1f1c8f6f5ec18b0e4a2b02d7d7121395b1fbd4
- name: routing
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/cf-routing-release?v=0.141.0
  version: 0.141.0
  sha1: fa4ba9a4ee045bdfb81b5c95b126c95f496ebf2b
- name: binary-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/binary-buildpack-release?v=1.0.5
  version: 1.0.5
  sha1: 444b244577d726c1dd6f1ae1bb2b0ca373ed9a83
- name: dotnet-core-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/dotnet-core-buildpack-release?v=v1.0.3
  version: v1.0.3
  sha1: fa3793f4db530adf01f4252d5962cd68fd957a9c
- name: go-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/go-buildpack-release?v=1.7.15
  version: 1.7.15
  sha1: 30c3d61fde24db139c56e340b3f6f7df8fe21260
- name: java-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/java-buildpack-release?v=3.10
  version: '3.10'
  sha1: c771f9d725485aed8e52da1d76bc08acb97b3a83
- name: java-offline-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/java-offline-buildpack-release?v=3.10
  version: '3.10'
  sha1: cfcfc1d8c891fff6eebfc9cf625f941628035dfe
- name: nodejs-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/nodejs-buildpack-release?v=1.5.23
  version: 1.5.23
  sha1: 77ab9c8aaee8fa6f1c572e72d420b1ef364ceae5
- name: php-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/php-buildpack-release?v=4.3.22
  version: 4.3.22
  sha1: 79d1967fc74ee0ca7f6e5b749a428083d7582972
- name: python-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/python-buildpack-release?v=1.5.12
  version: 1.5.12
  sha1: df0dd6414936bfbb5bfb9a6b2eb3887bb3539e2a
- name: ruby-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/ruby-buildpack-release?v=1.6.28
  version: 1.6.28
  sha1: e6127f81568dca1054be14c221b33ab2b411cd74
- name: staticfile-buildpack
  url: https://bosh.io/d/github.com/cloudfoundry/staticfile-buildpack-release?v=1.3.13
  version: 1.3.13
  sha1: 0741ad6d39cf258c317151e1227e0ccfe1fd7579
stemcells:
- alias: default
  os: ubuntu-trusty
  version: '3312'
