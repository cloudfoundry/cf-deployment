---
# --- enable iso-seg smoke tests ---
- type: replace
  path: /instance_groups/name=smoke-tests/jobs/name=smoke_tests/properties/smoke_tests/enable_isolation_segment_tests?
  value: true

- type: replace
  path: /instance_groups/name=smoke-tests/jobs/name=smoke_tests/properties/smoke_tests/isolation_segment_name?
  value: persistent_isolation_segment

- type: replace
  path: /instance_groups/name=smoke-tests/jobs/name=smoke_tests/properties/smoke_tests/isolation_segment_domain?
  value: "iso-seg.((system_domain))"

- type: replace
  path: /instance_groups/-
  value:
    name: iso-seg-router
    azs:
    - z1
    instances: 1
    vm_type: minimal
    vm_extensions:
    - iso-seg-cf-router-network-properties
    stemcell: default
    update:
      serial: true
    networks:
    - name: default
    jobs:
    - name: gorouter
      release: routing
      properties:
        nats:
          tls_enabled: true
          cert_chain: "((nats_client_cert.certificate))"
          private_key: "((nats_client_cert.private_key))"
        router:
          isolation_segments:
          - persistent_isolation_segment
          routing_table_sharding_mode: segments
          ssl_skip_validation: true
          enable_ssl: true
          ca_certs:
          - ((diego_instance_identity_ca.ca))
          - ((cc_tls.ca))
          - ((uaa_ssl.ca))
          backends:
            cert_chain: ((gorouter_backend_tls.certificate))
            private_key: ((gorouter_backend_tls.private_key))
          tls_pem:
          - cert_chain: "((router_ssl.certificate))"
            private_key: "((router_ssl.private_key))"
          status:
            password: "((router_status_password))"
            user: router-status
            tls:
              port: 8443
              certificate: ((gorouter_lb_health_tls.certificate))
              key: ((gorouter_lb_health_tls.private_key))
          route_services_secret: "((router_route_services_secret))"
          tracing:
            enable_zipkin: true
        routing_api:
          enabled: true
        uaa:
          clients:
            gorouter:
              secret: "((uaa_clients_gorouter_secret))"
          ca_cert: "((uaa_ssl.ca))"
          ssl:
            port: 8443

- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/routing_table_sharding_mode?
  value: shared-and-segments

- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/provides?/gorouter/as
  value: router_primary

- type: replace
  path: /instance_groups/name=api/jobs/name=routing-api/consumes?/gorouter/from
  value: router_primary

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/consumes?/router/from
  value: router_primary

- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/app_domains/-
  value: "iso-seg.((system_domain))"
