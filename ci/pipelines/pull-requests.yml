---
groups:
- name: cf-deployment
  jobs:
  - fail-prs-to-cf-deployment-main
  - fail-prs-to-cf-deployment-release-candidate
  - pass-prs-to-cf-deployment-develop
  - run-unit-tests-on-all-cf-deployment-prs
- name: cats
  jobs:
  - fail-prs-to-cats-main
  - pass-prs-to-cats-develop
  - run-unit-tests-on-all-cats-prs

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: loggregatorbot/github-pr-resource

resources:
  - name: runtime-ci
    type: git
    icon: github
    source:
      uri: https://github.com/cloudfoundry/runtime-ci.git

  - name: cf-deployment-all-branches
    type: pull-request
    source:
      access_token: ((ard_wg_gitbot_token))
      repository: cloudfoundry/cf-deployment
      required_review_approvals: 1
  - name: cf-deployment-main
    type: pull-request
    source:
      access_token: ((ard_wg_gitbot_token))
      repository: cloudfoundry/cf-deployment
      base_branch: main
  - name: cf-deployment-rc
    type: pull-request
    source:
      access_token: ((ard_wg_gitbot_token))
      repository: cloudfoundry/cf-deployment
      base_branch: release-candidate
      required_review_approvals: 1
  - name: cf-deployment-develop
    type: pull-request
    source:
      access_token: ((ard_wg_gitbot_token))
      repository: cloudfoundry/cf-deployment
      base_branch: develop
      required_review_approvals: 1

  - name: cats-all-branches
    type: pull-request
    source:
      access_token: ((ard_wg_gitbot_token))
      repository: cloudfoundry/cf-acceptance-tests
      required_review_approvals: 1
  - name: cats-main
    type: pull-request
    source:
      access_token: ((ard_wg_gitbot_token))
      repository: cloudfoundry/cf-acceptance-tests
      base_branch: main
  - name: cats-develop
    type: pull-request
    source:
      access_token: ((ard_wg_gitbot_token))
      repository: cloudfoundry/cf-acceptance-tests
      base_branch: develop
      required_review_approvals: 1

jobs:
  - name: fail-prs-to-cf-deployment-main
    public: true
    plan:
      - get: runtime-ci
      - get: cf-deployment-main
        trigger: true
        version: every
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cf-deployment-main
      - put: cf-deployment-main
        params:
          path: cf-deployment-main
          status: failure
          context: ((pr_context))
          comment_file: pull-request-comment/comment
  - name: fail-prs-to-cf-deployment-release-candidate
    public: true
    plan:
      - get: runtime-ci
      - get: cf-deployment-rc
        trigger: true
        version: every
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cf-deployment-rc
      - put: cf-deployment-rc
        params:
          path: cf-deployment-rc
          status: failure
          context: ((pr_context))
          comment_file: pull-request-comment/comment
  - name: pass-prs-to-cf-deployment-develop
    public: true
    plan:
      - get: cf-deployment-develop
        trigger: true
        version: every
      - put: cf-deployment-develop
        params:
          path: cf-deployment-develop
          status: success
          context: ((pr_context))

  - name: run-unit-tests-on-all-cf-deployment-prs
    public: true
    serial: true
    plan:
    - timeout: 4h
      do:
      - in_parallel:
        - get: runtime-ci
        - get: cf-deployment-all-branches
          trigger: true
          version: every
      - put: cf-deployment-all-branches
        params:
          path: cf-deployment-all-branches
          status: pending
          context: ((unit_tests_context))
      - do:
        - task: check-no-ops-file-are-deleted
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: cloudfoundry/bosh-cli
            inputs:
            - name: cf-deployment-all-branches
            params:
              RUN_SEMANTIC: false
            run:
              dir: ""
              path: bash
              args:
              - -c
              - |
                #!/bin/bash

                cp -r cf-deployment-all-branches /tmp/
                pushd cf-deployment-all-branches
                  export TERM=xterm

                  git config --global user.email "test"
                  git config --global user.name "test"

                  git fetch -q origin develop:develop
                  git merge develop --no-edit -q

                  removed_ops_files_count="$(git diff --name-only --relative=operations --diff-filter=D develop HEAD | wc -l)"
                  if [[ "${removed_ops_files_count}" != "0" ]]; then
                    echo -e 'One or more operations files were deleted, please follow these practices: \nhttps://github.com/cloudfoundry/cf-deployment/blob/38874f5a2c2dce847b132cb076f6611e26e96572/ops-file-promotion-workflow.md'
                    git diff --name-only --relative=operations --diff-filter=D develop HEAD
                    exit 1
                  fi
                popd
        - in_parallel:
          - task: unit-test-ops-files
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: cloudfoundry/bosh-cli
              inputs:
              - name: cf-deployment-all-branches
              params:
                RUN_SEMANTIC: false
              run:
                dir: cf-deployment-all-branches
                path: scripts/test
          - task: unit-test-golang-ops-files
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: cloudfoundry/bosh-cli
              inputs:
              - name: cf-deployment-all-branches
              run:
                dir: cf-deployment-all-branches/units
                path: ./test
                args:
                - -timeout
                - 20m
        on_failure:
          do:
          - task: write-pr-check-failure-comment
            file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
            input_mapping:
              pull-request: cf-deployment-all-branches
          - put: cf-deployment-all-branches
            params:
              path: cf-deployment-all-branches
              status: failure
              context: ((unit_tests_context))
              comment_file: pull-request-comment/comment
        on_success:
          put: cf-deployment-all-branches
          params:
            path: cf-deployment-all-branches
            status: success
            context: ((unit_tests_context))


  - name: fail-prs-to-cats-main
    public: true
    plan:
      - get: runtime-ci
      - get: cats-main
        trigger: true
        version: every
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cats-main
      - put: cats-main
        params:
          path: cats-main
          status: failure
          context: ((pr_context))
          comment_file: pull-request-comment/comment
  - name: pass-prs-to-cats-develop
    public: true
    plan:
      - get: cats-develop
        trigger: true
        version: every
      - put: cats-develop
        params:
          path: cats-develop
          status: success
          context: ((pr_context))

  - name: run-unit-tests-on-all-cats-prs
    public: true
    plan:
    - timeout: 4h
      do:
      - in_parallel:
        - get: runtime-ci
        - get: cats-all-branches
          trigger: true
          version: every
      - put: cats-all-branches
        params:
          path: cats-all-branches
          status: pending
          context: ((unit_tests_context))
      - task: run-cats-unit-tests
        file: runtime-ci/tasks/run-cats-unit-tests/task.yml
        input_mapping:
          cf-acceptance-tests: cats-all-branches
        on_failure:
          do:
          - task: write-pr-check-failure-comment
            file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
            input_mapping:
              pull-request: cats-all-branches
          - put: cats-all-branches
            params:
              path: cats-all-branches
              status: failure
              context: ((unit_tests_context))
              comment_file: pull-request-comment/comment
        on_success:
          put: cats-all-branches
          params:
            path: cats-all-branches
            status: success
            context: ((unit_tests_context))
