jobs:
- name: stable-acquire-pool
  plan:
  - in_parallel:
      steps:
      - get: bionic-stemcell
        trigger: true
      - get: cf-deployment
        trigger: true
      - params:
          acquire: true
        put: stable-pool
    timeout: 4h
  serial: true
- name: deploy-cf
  plan:
  - in_parallel:
      steps:
      - get: stable-pool
        passed:
        - stable-acquire-pool
        trigger: true
      - get: bionic-stemcell
        passed:
        - stable-acquire-pool
      - get: cf-deployment
        passed:
        - stable-acquire-pool
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
      - get: relint-envs
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      IGNORE_ERRORS: "true"
    task: guarantee-no-existing-cf-deployment
  - file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      bbl-state: relint-envs
      stemcell: bionic-stemcell
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
    task: upload-bionic-stemcell
  - config:
      image_resource:
        name: ""
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: bbl-state
      - name: cf-deployment-concourse-tasks
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      platform: linux
      run:
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/add-bionic.yml
          ---
          - type: replace
            path: /addons/name=bosh-dns/include/stemcell/-
            value:
              os: ubuntu-bionic
          EOT
          bosh runtime-config --name=dns > /tmp/dns.yml
          bosh interpolate -o /tmp/add-bionic.yml /tmp/dns.yml > /tmp/updated-dns.yml
          bosh -n update-runtime-config --name=dns /tmp/updated-dns.yml
        path: bash
    input_mapping:
      bbl-state: relint-envs
    task: update-dns-runtime-config
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      ops-files: cf-deployment
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      OPS_FILES: |
        operations/use-bionic-stemcell.yml
        operations/use-internal-lookup-for-route-services.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
      SYSTEM_DOMAIN: cf.bellatrix.env.wg-ard.ci.cloudfoundry.org
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/test/bellatrix/bbl-state
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
          SYSTEM_DOMAIN: cf.bellatrix.env.wg-ard.ci.cloudfoundry.org
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/test/bellatrix/bbl-state
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
          SYSTEM_DOMAIN: cf.bellatrix.env.wg-ard.ci.cloudfoundry.org
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/test/bellatrix/bbl-state
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
          SYSTEM_DOMAIN: cf.bellatrix.env.wg-ard.ci.cloudfoundry.org
        task: enable-docker-and-tasks
  public: true
  serial: true
  serial_groups:
  - stable-smokes
  - stable-cats
- name: run-smoke-tests
  plan:
  - do:
    - get: stable-pool
      passed:
      - deploy-cf
      trigger: true
    - in_parallel:
        steps:
        - get: relint-envs
        - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
  public: true
  serial: true
  serial_groups:
  - stable-smokes
- name: run-cats
  plan:
  - do:
    - get: stable-pool
      passed:
      - run-smoke-tests
      trigger: true
    - in_parallel:
        steps:
        - get: relint-envs
        - get: cf-deployment-concourse-tasks
        - get: cf-acceptance-tests-rc
    - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      input_mapping:
        bbl-state: relint-envs
        cf-acceptance-tests: cf-acceptance-tests-rc
        integration-configs: relint-envs
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
        CATS_INTEGRATION_CONFIG_FILE: environments/test/bellatrix/integration_config.json
      task: update-integration-configs
    - file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        cf-acceptance-tests: cf-acceptance-tests-rc
        integration-config: updated-integration-configs
      params:
        CAPTURE_LOGS: "true"
        CONFIG_FILE_PATH: environments/test/bellatrix/integration_config.json
        NODES: "12"
      task: run-cats
    timeout: 4h
  public: true
  serial: true
  serial_groups:
  - stable-cats
- name: stable-delete-deployment
  plan:
  - do:
    - get: stable-pool
      passed:
      - run-cats
      trigger: true
    - in_parallel:
        steps:
        - get: cf-deployment-concourse-tasks
        - get: relint-envs
    - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
        IGNORE_ERRORS: "true"
      task: delete-deployment-cf
    - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      task: run-bosh-cleanup
    - params:
        release: stable-pool
      put: stable-pool
    timeout: 4h
  public: true
  serial: true
- ensure:
    try:
      params:
        release: stable-pool
      put: stable-pool
  name: stable-release-pool-manual
  plan:
  - get: stable-pool
resources:
- icon: dna
  name: bionic-stemcell
  source:
    name: bosh-google-kvm-ubuntu-bionic-go_agent
  type: bosh-io-stemcell
- icon: github
  name: cf-acceptance-tests-rc
  source:
    branch: release-candidate
    private_key: ((cf_acceptance_tests_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
  type: git
- icon: github
  name: cf-deployment
  source:
    branch: release-candidate
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-deployment.git
  type: git
- icon: github
  name: cf-deployment-concourse-tasks
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
  type: git
- icon: github
  name: relint-envs
  source:
    branch: main
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/relint-envs.git
  type: git
- icon: github
  name: runtime-ci
  source:
    uri: https://github.com/cloudfoundry/runtime-ci.git
  type: git
- icon: pool
  name: stable-pool
  source:
    branch: main
    pool: cf-deployment/stable
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/relint-ci-pools
  type: pool
